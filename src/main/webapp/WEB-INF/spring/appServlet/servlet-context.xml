<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	
	<!-- @Controller 어노테이션을 읽어서 Spring Web 모듈을 실행할 때 
		 자동으로 해당 객체를 매핑하기 위한 태그 설정 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- * : 바로 밑에 있는 모든 파일들의 위치
	     **: 자신 하위의 모든 폴더 밑 파일의 위치
	     classpath : /resources 폴더의 하위 경로를 인식하기 위해서
	                               해당 경로를 root 경로처럼 바로 접근하기 위함
	 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	
	<!-- DispatcherServlet 을 통해 나가는 View의 정보를 받아서
	     앞 뒤로 붙일 추가 사항을 기입, 해당 정보에 맞는 view(.jsp) 를 연결해주는 역할 -->
	<!-- Ex)
		-( test.do )-> Controller -( index )->
		ViewResolver -( /WEB-INF/views/index.jsp )->
		URL화 되어 나간다.
	 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- base-package에 해당하는 패키지 기준을 포함 하위 패키지 경로에서
	     어노테이션 정보들을 찾아서 매핑 하기 위함 -->
	<context:component-scan base-package="com.kh.testSpring" />
	
</beans:beans>









